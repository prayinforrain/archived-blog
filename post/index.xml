<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on PrayinForRain.dev</title><link>http://prayinforrain.github.io/post/</link><description>Recent content in Posts on PrayinForRain.dev</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Wed, 01 Feb 2023 02:01:15 +0900</lastBuildDate><atom:link href="http://prayinforrain.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Typescript Generic</title><link>http://prayinforrain.github.io/post/typescript-generic/</link><pubDate>Wed, 01 Feb 2023 02:01:15 +0900</pubDate><guid>http://prayinforrain.github.io/post/typescript-generic/</guid><description>타입스크립트와 리액트를 같이 사용할 때, 우리는 useState 훅을 아래와 같이 사용합니다. 1 const [name, setName] = useState&amp;lt;string&amp;gt;(&amp;#34;지상</description></item><item><title>Hugo로 블로그를 옮기자</title><link>http://prayinforrain.github.io/post/migrating-to-hugo/</link><pubDate>Mon, 30 Jan 2023 19:17:55 +0900</pubDate><guid>http://prayinforrain.github.io/post/migrating-to-hugo/</guid><description>알음알음 티스푼 공사로 티스토리에서 이 곳으로 블로그를 옮겼습니다. 티스토리에 있던 컨텐츠 대부분은 옮기지 않았습니다. 별 의미도 없고 너무 사적인 내용이 많았기</description></item><item><title>Tree Shaking</title><link>http://prayinforrain.github.io/post/tree-shaking/</link><pubDate>Wed, 25 Jan 2023 17:17:15 +0900</pubDate><guid>http://prayinforrain.github.io/post/tree-shaking/</guid><description>용량을 절약하는 방법 웹페이지의 성능을 이야기하는 가장 직관적인 지표는 아마 페이지에 사용되는 파일의 크기일 것입니다. 파일의 크기가 무겁다면 파일을 다운받는 데</description></item><item><title>ECMAScript</title><link>http://prayinforrain.github.io/post/ecmascript/</link><pubDate>Wed, 25 Jan 2023 16:35:01 +0900</pubDate><guid>http://prayinforrain.github.io/post/ecmascript/</guid><description>Ecma international Ecma International is an industry association dedicated to the standardization of information and communication systems Emca International은 정보통신 시스템의 표준화를 위한 국제 표준화 기구입니다. &amp;gt; https://www.ecma-international.org/ Ecma Internatio</description></item><item><title>CSS의 display 속성</title><link>http://prayinforrain.github.io/post/css-display/</link><pubDate>Mon, 16 Jan 2023 16:38:15 +0900</pubDate><guid>http://prayinforrain.github.io/post/css-display/</guid><description>CSS의 display 속성은 HTML element가 block인지, inline인지, 그리고 자식 element들을 어떤 식으로 표시할지를 정하는 속성입니다. 다시 말</description></item><item><title>브라우저 렌더링과 성능</title><link>http://prayinforrain.github.io/post/browser-rendering-performance/</link><pubDate>Mon, 16 Jan 2023 16:38:15 +0900</pubDate><guid>http://prayinforrain.github.io/post/browser-rendering-performance/</guid><description>브라우저 렌더링 성능 최적화를 위해, 브라우저가 어떻게 HTML 문서를 화면에 그리는지 과정에 대해 이해할 필요가 있습니다. 브라우저 렌더링은 아래 사진과 같은 흐름으로</description></item><item><title>CSS의 크기 단위</title><link>http://prayinforrain.github.io/post/size-units-in-css/</link><pubDate>Fri, 13 Jan 2023 23:39:15 +0900</pubDate><guid>http://prayinforrain.github.io/post/size-units-in-css/</guid><description>CSS의 크기 단위 CSS에는 다양한 단위가 존재합니다. 우리가 잘 아는 px와 %부터, em, rem, pt, vh, vw 등등 다양한 단위가 존재하는데요, 이 크기 단위들을 언제 어떻게</description></item><item><title>모헤윰 mo:heyum - 프로젝트 회고</title><link>http://prayinforrain.github.io/post/finishing-moheyum/</link><pubDate>Wed, 21 Dec 2022 03:30:25 +0900</pubDate><guid>http://prayinforrain.github.io/post/finishing-moheyum/</guid><description>티스토리 블로그에 작성했던 부스트캠프 팀 프로젝트의 회고 글이다. [원본 링크] 내가 팀원들한테 이 얘길 했나 모르겠는데.. 이 페이지 좀 이쁘다. 잘만드셨다..</description></item><item><title>사이드바야 그만 깜빡여라</title><link>http://prayinforrain.github.io/post/prevent-sidebar-blinking/</link><pubDate>Tue, 06 Dec 2022 02:11:55 +0900</pubDate><guid>http://prayinforrain.github.io/post/prevent-sidebar-blinking/</guid><description>모헤윰의 프론트엔드 앱은 Next.js로 만들어져 있습니다. 팀원 그 누구도 사용해 본 적이 없음에도 굳이 선택한 이유는 NestJS를 써 보니 프레임워크를 사용</description></item><item><title>마크다운 만들기 - Markdown [3/3]</title><link>http://prayinforrain.github.io/post/making-editor-markdown/</link><pubDate>Mon, 05 Dec 2022 13:18:55 +0900</pubDate><guid>http://prayinforrain.github.io/post/making-editor-markdown/</guid><description>모헤윰의 에디터 만들기 시리즈 모아보기 에디터 만들기 - ContentEditable [1/3] 에디터 만들기 - getSelection [2/3] 에디터 만들기 - Markdown [3/3] 마지막입니다. 입력하고, 게시할 수 있게 되었으니, 이제 남</description></item><item><title>마크다운 만들기 - getSelection [2/3]</title><link>http://prayinforrain.github.io/post/making-editor-getselection/</link><pubDate>Thu, 24 Nov 2022 00:53:55 +0900</pubDate><guid>http://prayinforrain.github.io/post/making-editor-getselection/</guid><description>모헤윰의 에디터 만들기 시리즈 모아보기 에디터 만들기 - ContentEditable [1/3] 에디터 만들기 - getSelection [2/3] 에디터 만들기 - Markdown [3/3] 아니???????? 두 번째 글이 파서가 아니였네요. 저는</description></item><item><title>마크다운 만들기 - contentEditable [1/3]</title><link>http://prayinforrain.github.io/post/making-editor-contenteditable/</link><pubDate>Tue, 22 Nov 2022 20:36:55 +0900</pubDate><guid>http://prayinforrain.github.io/post/making-editor-contenteditable/</guid><description>모헤윰의 에디터 만들기 시리즈 모아보기 에디터 만들기 - ContentEditable [1/3] 에디터 만들기 - getSelection [2/3] 에디터 만들기 - Markdown [3/3] 모헤윰의 핵심 기능 중 하나는 마크다운 서식 지원입니다. 왜 S</description></item><item><title>Emotion</title><link>http://prayinforrain.github.io/post/emotion/</link><pubDate>Fri, 18 Nov 2022 16:42:55 +0900</pubDate><guid>http://prayinforrain.github.io/post/emotion/</guid><description>🤷TL;DR CSS-in-JS는 프로젝트 규모가 커질수록 관리하기 어려운 CSS의 문제를 보완한다. emotion과 styled-component</description></item><item><title>npm vs yarn vs pnpm</title><link>http://prayinforrain.github.io/post/npm-vs-yarn-vs-pnpm/</link><pubDate>Fri, 18 Nov 2022 16:42:55 +0900</pubDate><guid>http://prayinforrain.github.io/post/npm-vs-yarn-vs-pnpm/</guid><description>지금까지 저는 아무 의심 없이 npm을 사용해왔습니다. 이따금씩 node_modules 폴더가 저를 고통스럽게 했던 시간들이 있었지만, 프로젝트 초기화에 정말 이상한 행동만 하지 않으</description></item><item><title>Redux vs Recoil</title><link>http://prayinforrain.github.io/post/redux-vs-recoil/</link><pubDate>Fri, 18 Nov 2022 16:42:55 +0900</pubDate><guid>http://prayinforrain.github.io/post/redux-vs-recoil/</guid><description>🤷 TL;DR Redux는 안정적이지만, 선언과 사용이 복잡하다. Recoil은 사용이 매우 쉽지만 정식 버전이 없다. 프로젝트 규모에 따라 마음에 드는 라이브러리를 선</description></item></channel></rss>