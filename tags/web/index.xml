<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web on PrayinForRain.dev</title><link>http://prayinforrain.github.io/tags/web/</link><description>Recent content in Web on PrayinForRain.dev</description><generator>Hugo -- gohugo.io</generator><language>ko</language><lastBuildDate>Wed, 01 Feb 2023 02:01:15 +0900</lastBuildDate><atom:link href="http://prayinforrain.github.io/tags/web/index.xml" rel="self" type="application/rss+xml"/><item><title>Typescript Generic</title><link>http://prayinforrain.github.io/post/typescript-generic/</link><pubDate>Wed, 01 Feb 2023 02:01:15 +0900</pubDate><guid>http://prayinforrain.github.io/post/typescript-generic/</guid><description>타입스크립트와 리액트를 같이 사용할 때, 우리는 useState 훅을 아래와 같이 사용합니다. 1 const [name, setName] = useState&amp;lt;string&amp;gt;(&amp;#34;지상</description></item><item><title>Tree Shaking</title><link>http://prayinforrain.github.io/post/tree-shaking/</link><pubDate>Wed, 25 Jan 2023 17:17:15 +0900</pubDate><guid>http://prayinforrain.github.io/post/tree-shaking/</guid><description>용량을 절약하는 방법 웹페이지의 성능을 이야기하는 가장 직관적인 지표는 아마 페이지에 사용되는 파일의 크기일 것입니다. 파일의 크기가 무겁다면 파일을 다운받는 데</description></item><item><title>ECMAScript</title><link>http://prayinforrain.github.io/post/ecmascript/</link><pubDate>Wed, 25 Jan 2023 16:35:01 +0900</pubDate><guid>http://prayinforrain.github.io/post/ecmascript/</guid><description>Ecma international Ecma International is an industry association dedicated to the standardization of information and communication systems Emca International은 정보통신 시스템의 표준화를 위한 국제 표준화 기구입니다. &amp;gt; https://www.ecma-international.org/ Ecma Internatio</description></item><item><title>CSS의 display 속성</title><link>http://prayinforrain.github.io/post/css-display/</link><pubDate>Mon, 16 Jan 2023 16:38:15 +0900</pubDate><guid>http://prayinforrain.github.io/post/css-display/</guid><description>CSS의 display 속성은 HTML element가 block인지, inline인지, 그리고 자식 element들을 어떤 식으로 표시할지를 정하는 속성입니다. 다시 말</description></item><item><title>브라우저 렌더링과 성능</title><link>http://prayinforrain.github.io/post/browser-rendering-performance/</link><pubDate>Mon, 16 Jan 2023 16:38:15 +0900</pubDate><guid>http://prayinforrain.github.io/post/browser-rendering-performance/</guid><description>브라우저 렌더링 성능 최적화를 위해, 브라우저가 어떻게 HTML 문서를 화면에 그리는지 과정에 대해 이해할 필요가 있습니다. 브라우저 렌더링은 아래 사진과 같은 흐름으로</description></item><item><title>CSS의 크기 단위</title><link>http://prayinforrain.github.io/post/size-units-in-css/</link><pubDate>Fri, 13 Jan 2023 23:39:15 +0900</pubDate><guid>http://prayinforrain.github.io/post/size-units-in-css/</guid><description>CSS의 크기 단위 CSS에는 다양한 단위가 존재합니다. 우리가 잘 아는 px와 %부터, em, rem, pt, vh, vw 등등 다양한 단위가 존재하는데요, 이 크기 단위들을 언제 어떻게</description></item></channel></rss>